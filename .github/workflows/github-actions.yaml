name: CI/CD Pipeline on merge

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main
      - develop

jobs:
  gitversion:
    name: GitVersion
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.Semver.outputs.MajorMinorPatch }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
        with:
          fetch-depth: 0
      - uses: gittools/actions/gitversion/setup@v3.0.0
      - id: Semver
        uses: gittools/actions/gitversion/execute@v3.0.0

  git-tag-release:
    name: Git Tag Release
    runs-on: ubuntu-latest
    needs: gitversion
    permissions:
      contents: write
      contents: read
    steps:
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          CUSTOM_TAG: ${{ needs.gitversion.outputs.MajorMinorPatch }}

  build-products-service:
    name: Build Products Service
    needs: git-tag-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Restore dependencies of products service
        run: dotnet restore 
        working-directory: src/Kaleido.Modules.Services.Grpc.Products
      - name: Build products service
        run: dotnet build
        working-directory: src/Kaleido.Modules.Services.Grpc.Products

  build-products-service-migrations:
    name: Build Products Service Migrations
    needs: git-tag-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Restore dependencies of products service migrations
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Migrations
      - name: Build products service migrations
        run: dotnet build
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Migrations

  build-products-service-client:
    name: Build Products Service Client
    needs: git-tag-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Restore dependencies of products service client
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Client
      - name: Build products service client
        run: dotnet build
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Client

  unit-tests:
    name: Run Unit Tests
    needs: [build-products-service, build-products-service-migrations, build-products-service-client]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Restore dependencies of unit tests
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Tests.Unit
      - name: Run unit tests
        run: dotnet test
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Tests.Unit

  integration-tests:
    name: Run Integration Tests
    needs: [unit-tests, gitversion]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Restore dependencies of integration tests
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Tests.Integrations
      - name: Build Product Service Docker Image
        run: docker build . -f dockerfiles/Grpc.Products/Dockerfile -t kaleido-modules-services-grpc-products:${{ needs.gitversion.outputs.version }}
      - name: Build Migrations Docker Image
        run: docker build . -f dockerfiles/Grpc.Products.Migrations/Dockerfile -t kaleido-modules-services-grpc-products-migrations:${{ needs.gitversion.outputs.version }}
      - name: Run integration tests
        run: dotnet test
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Tests.Integrations
        env:
          PRODUCTS_IMAGE_NAME: kaleido-modules-services-grpc-products:${{ needs.gitversion.outputs.version }}
          MIGRATIONS_IMAGE_NAME: kaleido-modules-services-grpc-products-migrations:${{ needs.gitversion.outputs.version }}
          CI: true

  build-and-push-products-docker-image:
    name: Publish Docker Images
    needs: [integration-tests, gitversion]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Build Product Service Docker Image
        run: docker build . \
          -f dockerfiles/Grpc.Products/Dockerfile \
          -t ghcr.io/Kaleido-organisation-manager/kaleido-modules-services-grpc-products:${{ needs.gitversion.outputs.version }}
      - name: Publish Product Service Docker Image
        run: docker push ghcr.io/Kaleido-organisation-manager/kaleido-modules-services-grpc-products:${{ needs.gitversion.outputs.version }}

  build-and-push-migrations-docker-image:
    name: Build and Push Docker Images
    needs: [integration-tests, gitversion]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Build Migrations Docker Image
        run: docker build . \
          -f dockerfiles/Grpc.Products.Migrations/Dockerfile \
          -t ghcr.io/Kaleido-organisation-manager/kaleido-modules-services-grpc-products-migrations:${{ needs.gitversion.outputs.version }}
      - name: Publish Migrations Docker Image
        run: docker push ghcr.io/Kaleido-organisation-manager/kaleido-modules-services-grpc-products-migrations:${{ needs.gitversion.outputs.version }}

  build-and-publish-client-package:
    name: Build and Publish Client Package
    needs: [integration-tests, gitversion]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Pack Client Package
        run: dotnet pack --configuration Release /p:Version=${{ needs.gitversion.outputs.version }}
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Client
      - name: Publish Client Package
        run: dotnet nuget push "bin/Release/Kaleido.Modules.Services.Grpc.Products.Client.${{ needs.gitversion.outputs.version }}.nupkg"  \
          --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
        working-directory: src/Kaleido.Modules.Services.Grpc.Products.Client
        env:
          VERSION: ${{ needs.gitversion.outputs.version }}

      
